name: Tauri Build

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build-tauri:
    strategy:
      fail-fast: false
      matrix:
        platform: [macos-latest, ubuntu-latest, windows-latest]

    runs-on: ${{ matrix.platform }}
    steps:
      - uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18' # Or your preferred LTS version
      
      - name: Install pnpm
        run: npm install -g pnpm

      - name: Install Rust stable
        uses: dtolnay/rust-toolchain@stable

      - name: Install dependencies (Linux)
        if: matrix.platform == 'ubuntu-latest'
        run: |
          sudo apt-get update
          sudo apt-get install -y libgtk-3-dev libwebkit2gtk-4.0-dev libappindicator3-dev librsvg2-dev patchelf

      - name: Install frontend dependencies
        run: pnpm install
        
      # TODO: Setup local Autonomi network for tests
      # - name: Start local Autonomi network
      #   run: |
      #     chmod +x ./scripts/start-local-autonomi.sh
      #     ./scripts/start-local-autonomi.sh &
      #     sleep 10 # Wait for network to start

      - name: Install Tauri CLI
        run: cargo install tauri-cli --locked

      - name: Build Tauri application
        uses: tauri-apps/tauri-action@v0
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          TAURI_PRIVATE_KEY: ${{ secrets.TAURI_PRIVATE_KEY }} # For signing, if applicable
          TAURI_PRIVATE_KEY_PASSWORD: ${{ secrets.TAURI_PRIVATE_KEY_PASSWORD }}
        with:
          tagName: app-v__VERSION__ # Using the default version replacement
          releaseName: 'App v__VERSION__'
          releaseBody: 'See the assets to download this version.'
          releaseDraft: true
          prerelease: false
          # distPath: "src-tauri/target/release/bundle/"
          # iconPath: "src-tauri/icons/icon.png"
          # includeDebug: false
          # appName: "regenerative-marketplace"
          # tauriScript: "pnpm tauri"

      # TODO: Add Playwright E2E tests execution step
      # - name: Run E2E Tests
      #   run: pnpm exec playwright test

      # TODO: Add steps for macOS notarization and Windows signing if TAURI_PRIVATE_KEY is for code signing certificate
      # For macOS, you might need something like:
      # - name: Notarize macOS App
      #   if: matrix.platform == 'macos-latest' && secrets.APPLE_API_KEY && secrets.APPLE_API_ISSUER
      #   run: |
      #     xcrun notarytool submit ${{ steps.build.outputs.appName }}.dmg --apple-id ${{ secrets.APPLE_ID }} --team-id ${{ secrets.APPLE_TEAM_ID }} --password ${{ secrets.APPLE_APP_SPECIFIC_PASSWORD }}
      # Requires APPLE_ID, APPLE_TEAM_ID, APPLE_APP_SPECIFIC_PASSWORD secrets

      # For Windows, signtool.exe usage would be here if not handled by tauri-action or a custom build script. 